<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>hugo - 分类 - </title>
        <link>https://michaelsongyc.github.io/categories/hugo/</link>
        <description>hugo - 分类 - </description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 13 Aug 2019 00:56:59 &#43;0000</lastBuildDate><atom:link href="https://michaelsongyc.github.io/categories/hugo/" rel="self" type="application/rss+xml" /><item>
    <title>Hugo搭建博客[How to build a blog quickly?]</title>
    <link>https://michaelsongyc.github.io/posts/tech/hugo/hugo-build-blog/</link>
    <pubDate>Tue, 13 Aug 2019 00:56:59 &#43;0000</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/hugo/hugo-build-blog/</guid>
    <description><![CDATA[<p></p>
<h1 id="hugo介绍">hugo介绍</h1>
<p>Hugo
Hugo 几年前的影响力是不如 hexo 的，但现在越来越多的人从 hexo 迁移到了 Hugo，Hugo使用人数也多了起来，GitHub 上 Hugo 项目有 56.2k 个 star，已远远超过了 hexo，因此你也不用太担心 Hugo 会不会太小众化的问题，但是 Hugo 上的主题选择会更少一些，其中最受欢迎的是 wowchemy，但也仅有 6.1k 个star，而本站采用的是 LoveIt 主题，它的 star 就更少了，才 1.6k 个。当然，如果你是搞前端开发的，或者乐意自己写主题，那这些就不重要了。</p>
<h2 id="hugo优点">Hugo优点：</h2>
<p>速度快</p>
<p>Hugo 采用 Go 语言编写，它的速度用作者的话来形容就是世界上最快的构建网站工具。并且 Hugo 是即时渲染的，这意味着你可以边写边改样式，直到你满意为止。即使是你写了几百篇文章，它也能在几秒之内全部渲染完成。</p>
<p>The world’s fastest framework for building websites</p>
<p>配置更为简单</p>
<p>你需要安装只是 Hugo，不像 hexo 还得安装 Node.js。并且Hugo 中是不区分站点和主题的配置文件的，Hugo 中只有一个位于站点根目录下的 config.toml 配置文件，你只用在这里面进行修改就可以了。</p>
<p>方便自定义</p>
<p>你可以在不修改主题文件的前提下方便地定制主题。在 Hugo 中，如果你想要定制主题，你只需在站点目录下新建相应的文件即可。这是非常利于主题的维护的，你只需使用 Git 的 submodule 的方式安装 Hugo 的主题，然后更新时只需直接在站点根目录下敲一条命令回车即可，非常方便！</p>
<h2 id="缺点">缺点：</h2>
<p>主题比较少，很可能大家都是用的同一个主题，并且主题作者更新会更少一点。</p>
<p>总结：如果你喜欢 DIY，我建议使用 Hugo。如果你是个专业博主，写了很多文章需要渲染，我建议使用 Hugo！</p>
<h1 id="环境准备">环境准备</h1>
<h2 id="1安装-hugo">1.安装 hugo</h2>
<ul>
<li>
<p>自动安装（依赖网速，可能会非常慢） 在终端中输入 <code>brew install hugo</code> 安装。 安装成功后可输入 <code>hugo version</code> 查看版本信息。</p>
</li>
<li>
<p>手工安装
首先，请前往 GitHub 上下载最新版的 Hugo 压缩包，Releases · gohugoio/hugo (github.com)，建议选择 extended 版本，这将更有利于后续的 DIY 操作！
下载完成后解压到一个你认为合适的位置，然后把 hugo.exe 所在的文件夹添加至环境变量中的 Path 中即可。</p>
</li>
</ul>
<h2 id="2创建新网址">2.创建新网址</h2>
<blockquote>
<p>hugo new site quickstart</p>
</blockquote>
<p>其中quickstart更改为用户名.github.io-creator（用户名为 github 用户名，需要小写） 使用code 用户名.github.io-creator使用 vscode 查看目录</p>
<h2 id="3添加一个主题">3.添加一个主题</h2>
<ul>
<li>在 quickstart 目录下打开新的终端，输入 <code>git init</code></li>
</ul>
<blockquote>
<p>git clone <a href="https://github.com/olOwOlo/hugo-theme-even" target="_blank" rel="noopener noreffer ">https://github.com/olOwOlo/hugo-theme-even</a> themes/even</p>
</blockquote>
<p>把 \themes\LoveIt\exampleSite目录下的config.toml复制下来，替换掉 <code>站点根目录</code> 下的同名文件。</p>
<ul>
<li>
<p>然后对这个文件进行一些自定义修改。</p>
</li>
<li>
<p>然后进入根目录下的archetypes文件夹中，修改default.md文件为下面的内容（这个文件是模板文件，通过指令创建的文章将以模板为基础内容）</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">title: &#34;{{ replace .Name &#34;-&#34; &#34; &#34; | title }}&#34;
</span></span><span class="line"><span class="cl">date: {{ .Date }}
</span></span><span class="line"><span class="cl">tags: [&#34;&#34;]
</span></span><span class="line"><span class="cl">categories: [&#34;&#34;]
</span></span><span class="line"><span class="cl">toc:
</span></span><span class="line"><span class="cl">  enable: true
</span></span><span class="line"><span class="cl">description: 
</span></span><span class="line"><span class="cl">draft: true
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>其中title表示文章标题，date为生成文章当时的时间，tags为标签，categories为目录，toc enable为启用文章目录（需要自己在文章中生成），description为文章摘要，draft表示是否为草稿（写完了文章把这里改为 false 即可），</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
