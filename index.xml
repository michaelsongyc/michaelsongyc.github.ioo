<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://michaelsongyc.github.io/</link>
        <description>Welcome to SYC Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 10 Sep 2022 20:39:01 &#43;0800</lastBuildDate>
            <atom:link href="https://michaelsongyc.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>心灵鸡汤</title>
    <link>https://michaelsongyc.github.io/posts/life/sentence/</link>
    <pubDate>Tue, 16 Aug 2022 20:19:50 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/life/sentence/</guid>
    <description><![CDATA[加油，把刷题变成打游戏一样的兴趣。 天道酬勤，凡事感激. 编程能力就像任何其他技能一样，也是一个可以通过 刻意练习 大大提高的。 1 2 3 4 5 6 7 8 9 大]]></description>
</item>
<item>
    <title>算法-搜集</title>
    <link>https://michaelsongyc.github.io/posts/tech/leetcode/collect/</link>
    <pubDate>Sat, 10 Sep 2022 20:39:01 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/leetcode/collect/</guid>
    <description><![CDATA[1-容易-两数之和 1-容易-两数之和 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的]]></description>
</item>
<item>
    <title>Hugo Search</title>
    <link>https://michaelsongyc.github.io/posts/tech/tools/hugo-search/</link>
    <pubDate>Sun, 04 Sep 2022 15:32:39 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/tools/hugo-search/</guid>
    <description><![CDATA[LoveIt 使用Algolia搜索 Hugo-LoveIt添加Algolia搜索 loveit支持两种搜索：lunr和algolia。 lunr性能实在堪忧]]></description>
</item>
<item>
    <title>算法-二叉树</title>
    <link>https://michaelsongyc.github.io/posts/tech/leetcode/tree/</link>
    <pubDate>Sun, 21 Aug 2022 22:59:48 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/leetcode/tree/</guid>
    <description><![CDATA[二叉树 二叉树题型主要是用来培养递归思维的 二叉树解题的思维模式分两类： 1、是否可以通过遍历一遍二叉树得到答案？如果可以，用一个 traverse 函数配合外部变]]></description>
</item>
<item>
    <title>算法-链表</title>
    <link>https://michaelsongyc.github.io/posts/tech/leetcode/listnode/</link>
    <pubDate>Sun, 21 Aug 2022 12:59:26 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/leetcode/listnode/</guid>
    <description><![CDATA[链表 链表分带头结点的链表 和 不带头结点的链表； 所有的链表都有一个头指针head，带头结点的链表中head的数据项为空，而不带头的链表直接在头结]]></description>
</item>
<item>
    <title>Word中如何插入代码块？</title>
    <link>https://michaelsongyc.github.io/posts/tech/tools/wordcode/</link>
    <pubDate>Sun, 21 Aug 2022 12:43:16 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/tools/wordcode/</guid>
    <description><![CDATA[方式1 使用 codeinword 在线工具，选择code对应的语言后，生成copy，粘贴到word中即可。 方式2 使用 Visual Studio code. VSCode 支持复制后直接粘贴到word即是着色后]]></description>
</item>
<item>
    <title>算法-数组</title>
    <link>https://michaelsongyc.github.io/posts/tech/leetcode/array/</link>
    <pubDate>Fri, 19 Aug 2022 18:23:28 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/leetcode/array/</guid>
    <description><![CDATA[数组/单链表系列算法 单链表常考的技巧就是双指针 比如判断单链表是否成环，拍脑袋的暴力解是什么？就是用一个 HashSet 之类的数据结构来缓存走过的节点，遇到]]></description>
</item>
<item>
    <title>算法概述</title>
    <link>https://michaelsongyc.github.io/posts/tech/leetcode/algorithm/</link>
    <pubDate>Thu, 18 Aug 2022 20:24:07 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/leetcode/algorithm/</guid>
    <description><![CDATA[一、数据结构的存储方式 数据结构的存储方式只有两种：数组（顺序存储）和链表（链式存储） 这句话怎么理解，不是还有散列表、栈、队列、堆、树、图等等]]></description>
</item>
<item>
    <title>Github</title>
    <link>https://michaelsongyc.github.io/posts/tech/github/github/</link>
    <pubDate>Thu, 18 Aug 2022 20:00:22 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/tech/github/github/</guid>
    <description><![CDATA[leetcode leetcode-labuladong (109k) labuladong-算法讲解 宫水三叶-blog leetcode-宫水三叶 github-宫水三叶]]></description>
</item>
<item>
    <title>Draft</title>
    <link>https://michaelsongyc.github.io/posts/life/draft/</link>
    <pubDate>Sun, 14 Aug 2022 09:20:01 &#43;0800</pubDate>
    <author>Michael Song</author>
    <guid>https://michaelsongyc.github.io/posts/life/draft/</guid>
    <description><![CDATA[]]></description>
</item>
</channel>
</rss>
